type Query {
    user: User!
    appointments(userId: String!): [Appointment!]!
    appointmentById(appointmentId: String!): Appointment!
}

type Mutation {
    
}

type User {
    id: String!
    fullname: String!
    email: String!
    age: Int!
    phone: String!
    verified: Boolean!
    verificationCode: String!
    token: String!
    Appointments: [Appointment!]!
    Doctors: [Doctor]!
    Plan: Plans!
}

type Doctor {
    id: String!
    fullname: String!
    email: String!
    phone: String!
    Appointments: [Appointment!]!
}

type Appointment {
    id: String!
    Doctor: Doctor!
}

type Product {
    id: String!
}

enum Plans {
    PLAN_FREE
    PLAN_FAMILY_INSURANCE
    PLAN_LIFE_INSURANCE
}